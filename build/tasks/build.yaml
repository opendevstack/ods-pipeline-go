apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: ods-pipeline-go-build
spec:
  description: |
    Builds Go applications.

    See https://github.com/opendevstack/ods-pipeline-go/blob/v{{.Version}}/docs/build.adoc
  params:
    - name: working-dir
      description: |
        Working directory. The path must be relative to the root of the repository,
        without leading `./` and trailing `/`.
      type: string
      default: "."
    - name: enable-cgo
      description: Whether to enable CGO. When not enabled the build will set `CGO_ENABLED=0`.
      type: string
      default: "false"
    - name: go-os
      description: "`GOOS` variable (the execution operating system such as `linux`, `windows`)."
      type: string
      default: "linux"
    - name: go-arch
      description: "`GOARCH` variable (the execution architecture such as `arm`, `amd64`)."
      type: string
      default: "amd64"
    - name: output-dir
      description: >-
        Path to the directory into which the resulting Go binary should be copied, relative to `working-dir`.
        This directory may then later be used as Docker context for example.
      type: string
      default: docker
    - name: cache-build
      description: >-
        If enabled tasks uses or populates cache with the output dir contents (and artifacts) so that
        a build can be skipped if the `working-dir` contents did not change.
        You must set this to `"false"` if the build can be affected by files outside `working-dir`. See ADR caching-build-tasks for more details and workarounds.
      type: string
      default: "true"
    - name: build-extra-inputs
      description: >-
        List of build source directories (as colon separated string) which in addition working-dir influence the build.
        These directories are relative to the repository root.
        If the contents in these directories change the cache is invalidated so that the build task will rebuild from scratch.
      type: string
      default: ""
    - name: build-script
      description: >-
        Build script to execute. The
        link:https://github.com/opendevstack/ods-pipeline-go/blob/main/build/images/scripts/go-build.sh[default script]
        is located in the container image. If you specify a relative path
        instead, it will be resolved from the workspace. See the task definition
        for details how the build script is invoked.
      type: string
      default: "/usr/local/bin/go-build-script"
    - name: pre-test-script
      description: Script to execute before running tests, relative to the working directory.
      type: string
      default: ""
  results:
    - description: The cache location that the build task used. If caching is not enabled this will be an empty string.
      name: build-reused-from-location
  steps:
    - name: go-build
      # Image is built from build/images/Dockerfile.go-toolset.
      image: '{{.ImageRepository}}/go-toolset:{{.Version}}'
      env:
        - name: HOME
          value: '/tekton/home'
        - name: CI
          value: "true"
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: ods-pipeline
      command: [ "go-build-action" ]
      args: [
        "-build-extra-inputs=$(params.build-extra-inputs)",
        "-build-reused-from-location-path=$(results.build-reused-from-location.path)",
        "-build-script=$(params.build-script)",
        "-cache-build=$(params.cache-build)",
        "-debug=${DEBUG}",
        "-enable-cgo=$(params.enable-cgo)",
        "-go-os=$(params.go-os)",
        "-go-arch=$(params.go-arch)",
        "-output-dir=$(params.output-dir)",
        "-pre-test-script=$(params.pre-test-script)",
        "-working-dir=$(params.working-dir)",
      ]
      volumeMounts:
        - mountPath: /etc/ssl/certs/private-cert.pem
          name: private-cert
          readOnly: true
          subPath: tls.crt
      workingDir: $(workspaces.source.path)
  volumes:
    - name: private-cert
      secret:
        secretName: ods-private-cert
        optional: true
  workspaces:
    - name: source
